library(tidyverse)
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
head(diamonds)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
head(diamonds)
library(tidyverse)
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
head(diamonds)
head(diamonds)
knitr::kable(head(diamonds), caption = "a knitr kable")
install.packages("knitr")
knitr::kable(head(diamonds), caption = "a knitr kable")
install.packages("knitr")
diamonds %>%
filter(cut %in% c("Ideal", "Premium", "Very Good")) %>%
group_by(cut) %>%
ggplot(aes(cut, price)) +
geom_boxplot() +
labs(title = "Average Diamond Price ($) by Quality of Cut")
diamonds %>%
filter(cut %in% c("Ideal", "Premium", "Very Good")) %>%
group_by(cut) %>%
ggplot(aes(carat, price, color = cut)) +
geom_smooth() +
labs(title = "Diamond Price by Cut and Weight", subtitle = "The Bigger the Diamond, the Lower the Quality")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(tidyverse)
library(palerpenguins)
library(palmerpenguins)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(palmerpenguins)
#> # A tibble: 344 Ã— 8
4+4
b <-4
4+4
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023\datasets")
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/expenditure.txt", header=T)
View(expenditure)
df_not_tidy <- read.csv("datasets/expanditure.csv")
df_not_tidy <- read.csv("datasets/expanditure.csv")
df_not_tidy <- read.csv("datasets/expanditure.csv")
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023\problemSets\PS01\myasnwers")
getwd()
View(expenditure.csv)
View(expenditure)
library(readr)
expenditure <- read_csv("GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv")
View(expenditure)
View(expenditure)
ggplot(Expenditure,mapping = aes(x = Income, y = Spending)) +
geom_point(mapping = aes(color = Region, shape= Region))+
geom_smooth(method = "lm")+
scale_color_manual(values = c("red","blue","green","brown"))+
scale_shape_manual(values = c("circle","triangle","square","diamond"))
Expenditure$Region <- as.factor(Expenditure$Region)
Expenditure$Region <- as.factor(Expenditure$Region)
library(readr)
expenditure <- read_delim("GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(expenditure)
#Structure of my data, what type of variables I have, character, numeric, list, etc.
str(Expenditure)
Expenditure <- read.csv("C:/Users/Antonio Felix/OneDrive/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv", header=T)
View(Expenditure)
library(readr)
Expenditure <- read_delim("GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(Expenditure)
#Structure of my data, what type of variables I have, character, numeric, list, etc.
str(Expenditure)
Expenditure <- read.csv("C:/Users/Antonio Felix/OneDrive/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv", header=T)
#Structure of my data, what type of variables I have, character, numeric, list, etc.
str(Expenditure)
glimpse(Expenditure)
Expenditure <- read.csv("C:/Users/Antonio Felix/OneDrive/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv", header=T)
glimpse(Expenditure)
# Number of observations and number of variables
dim(Expenditure)
length(Expenditure)
View(Expenditure)
library(readr)
Expenditure <- read_delim("GitHub/StatsI_Fall2023/problemSets/PS01/my_answers/expenditure.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(Expenditure)
#Structure of my data, what type of variables I have, character, numeric, list, etc.
str(Expenditure)
glimpse(Expenditure)
# Number of observations and number of variables
dim(Expenditure)
length(Expenditure)
View(Expenditure)
head(Expenditure)
library(tidyverse)
head(Expenditure)
glimpse(Expenditure)
head(Expenditure)
colnames(Expenditure)[colnames(Expenditure)=="Y"]<-"Spending"
colnames(Expenditure)[colnames(Expenditure)=="X1"]<-"Income"
colnames(Expenditure)[colnames(Expenditure)=="X2"]<-"Residents"
colnames(Expenditure)[colnames(Expenditure)=="X3"]<-"Urban"
head(Expenditure)
summary(Expenditure$Spending)
summary(Expenditure$Income)
summary(Expenditure$Residents)
summary(Expenditure$Urban)
summary(Expenditure$Region)
#Answer of option A
# Relationship among Y, X1, X2, and X3
plot(Expenditure$Residents,Expenditure$Spending)
plot(Expenditure$Residents, Expenditure$Spending)
cor(Expenditure$Residents,Expenditure$Spending)
hist(Expenditure$Spending) # Distribution
mean(Expenditure$Spending) # Central tendency, mean
var(Expenditure$Spending) # Variability, variance
sd(Expenditure$Spending) # Variability, standard deviation
sd(Expenditure$Spending)/sqrt(length((Expenditure$Spending)))
hist(Expenditure$Residents)
mean(Expenditure$Residents)
var(Expenditure$Residents)
sd(Expenditure$Residents)
sd(Expenditure$Residents)/sqrt(length((Expenditure$Residents)))
cor(Expenditure$Residents,Expenditure$Spending)
plot(Expenditure$Residents,Expenditure$Spending)
hist(Expenditure$Residents)
#Y & x2 = Expenditure/Spending & Urban areas
hist(Expenditure$Urban)
cor(Expenditure$Urban, Expenditure$Spending)
plot(Expenditure$Urban, Expenditure$Spending)
#X1 & X3 = Income/People on Urban areas
cor(Expenditure$Urban, Expenditure$Income)
plot(Expenditure$Urban, Expenditure$Income)
plot(Expenditure$Income, Expenditure$Urban)
plot(Expenditure$Urban, Expenditure$Income)
#Y & x2 = Expenditure/Spending & Urban areas
hist(Expenditure$Urban)
plot(Expenditure$Urban, Expenditure$Income)
#X2 & X3 = Residents "Financially insecure" /People on Urban areas
cor(Expenditure$Urban, Expenditure$Income)
plot(Expenditure$Urban, Expenditure$Income)
#X2 & X3 = Residents "Financially insecure" /People on Urban areas
cor(Expenditure$Residents, Expenditure$Urban)
plot(Expenditure$Residents, Expenditure$Urban)
cor(Expenditure$Spending,Expenditure$Region)
plot(Expenditure$Spending,Expenditure$Region)
plot(Expenditure$Region,Expenditure$Spending)
ggplot(Expenditure,mapping = aes(y = Spending, x = Region))+geom_point()
plot(Expenditure$Region,Expenditure$Spending)
ggplot(Expenditure,mapping = aes(y = Spending, x = Region))+geom_point()
sum(Expenditure$Spending)
plot(Expenditure$Region,Expenditure$Spending)
ggplot(Expenditure,mapping = aes(y = Spending, x = Region))+geom_point()
cor(Expenditure$Spending,Expenditure$Region)
cor(Expenditure$Spending,Expenditure$Income)
plot(Expenditure$Income,Expenditure$Spending)
ggplot(Expenditure,mapping = aes(x = Income, y = Spending)) +
geom_point(mapping = aes(color = Region, shape= Region))+
geom_smooth(method = "lm")+
scale_color_manual(values = c("red","blue","green","brown"))+
scale_shape_manual(values = c("circle","triangle","square","diamond"))
Expenditure$Region <- as.factor(Expenditure$Region)
ggplot(Expenditure,mapping = aes(x = Income, y = Spending)) +
geom_point(mapping = aes(color = Region, shape= Region))+
geom_smooth(method = "lm")+
scale_color_manual(values = c("red","blue","green","brown"))+
scale_shape_manual(values = c("circle","triangle","square","diamond"))
t.test(y, mu = 100)
mean(y)+1.90*(sd(y)/5)
# Get working directory
getwd()
# Set working directory
setwd("/Users/hannahfrank/StatsI_Fall2023_prep")
# Set working directory
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023\tutorials\04")
# Set working directory
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023")
# Load data
df <- readRDS("datasets/movies.rds")
getwd
# Get working directory
getwd()
# Set working directory
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023")
# Get working directory
getwd()
# Get working directory
getwd()
# Set working directory
setwd("C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023")
# Set working directory
setwd(f"C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023")
# Set working directory
setwd(b"C:\Users\Antonio Felix\OneDrive\Documents\GitHub\StatsI_Fall2023")
# Set working directory
setwd("C:/Users\Antonio Felix/OneDrive/Documents/GitHub/StatsI_Fall2023")
# Set working directory
setwd("C:/Users/Antonio Felix/OneDrive/Documents/GitHub/StatsI_Fall2023")
# Load data
df <- readRDS("datasets/movies.rds")
View(df)
df_s <- df[df$genre=="Comedy" |
df$genre=="Drama" |
df$genre=="Documentary", ]
df_s$genre <- droplevels(df_s$genre)
View(df_s)
chisq.test(df_s$genre,
df_s$critics_rating)
sprintf("%.20f",1.097e-12)
ls(chi_test)
chi_test <- chisq.test(df_s$genre, df_s$critics_rating)
ls(chi_test)
chi_test$observed # f_o (observed frequencies)
chi_test$expected # f_e (expected frequencies under the assumption of H0,
# under the assumption that two variables are independent)
chi_test$residuals
chi_test$stdres
df <- read.csv("datasets/fictional_data.csv")
View(df)
# Scatter plot
plot(df$income,df$edu)
# Calculate correlation
cor(df$income,df$edu)
# Add to scatter plot
text(1200, 7, sprintf("Correlation=%s", round(cor(df$income,df$edu),4)))
# Improve visualization and save
png(file="tutorials/04/scatter_plot.png")
xlab="Monthly net income (in Euro)",
png(file="tutorials/04/scatter_plot.png")
plot(df$income,
df$edu,
xlab="Monthly net income (in Euro)",
ylab="University level education (in years)",
main="The Relationship between education and income")
text(1200, 8, sprintf("Correlation=%s", round(cor(df$income,df$edu),4)))
dev.off()
cor.test(df$income, df$edu)
sprintf("%.20f",7.52e-07)
summary(lm(df$income~df$edu))
summary(lm(income~edu, data=df))
# Save model as object
model <- lm(income~edu, data=df)
# t-test for the correlation coefficient
cor.test(df$income, df$edu)
# t-test for the slope of a regression line
summary(model)
# Check p-value
sprintf("%.20f",2.17e-06)
# Plot
plot(x=df$edu, y=df$income) # Scatter plot
abline(model) # Add regression line
# Step by step
plot(x=df$edu, y=df$income) # Scatter plot
abline(v=4)  # Either specify single value (v for vertical)
abline(976.16, 250.64) # Or intercept and slope
abline(model) # Use intercept and slope in model object
abline(model, col="red") # Change color
# Make predictions for first observation in df
head(df)
model$fitted.values
model$residuals
# Make predictions for a range of x values
predict(model, newdata=data.frame(edu = seq(min(df$edu), max(df$edu), by=1)))
# Step by step
predict(model) # Predicted outcomes
plot(x=df$edu, y=df$income) # Scatter plot
points(df$edu, model$fitted.values, # Add another scatter plot on top
col="green")
plot(x=df$edu, y=df$income) # Scatter plot
points(df$edu, model$fitted.values, # Add another scatter plot on top
col="green")
legend(0, 3000, # x and y position of legend
legend=c("Predictions", "95% Confidence intervals"),
col=c("black","gray"),
pch=1)
dev.off()
